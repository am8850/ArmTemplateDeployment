{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "endpointName": "[concat('endpoint-', uniqueString(resourceGroup().id))]",
    "profileName": "CdnProfile1"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[variables('storageAccountName')]"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('profileName')]",
      "type": "Microsoft.Cdn/profiles",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-02",
      "tags": {
        "displayName": "[variables('profileName')]"
      },
      "sku": {
        "name": "Standard_Verizon"
      },
      "resources": [
        {
          "apiVersion": "2016-04-02",
          "name": "[variables('endpointName')]",
          "type": "endpoints",
          "dependsOn": [
            "[variables('profileName')]",
            "[variables('storageAccountName')]"
          ],
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "[variables('endpointName')]"
          },
          "properties": {
            "originHostHeader": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-06-15' ).primaryEndpoints.blob,'https://',''),'/','')]",
            "isHttpAllowed": true,
            "isHttpsAllowed": true,
            "queryStringCachingBehavior": "IgnoreQueryString",
            "contentTypesToCompress": [
              "text/plain",
              "text/html",
              "text/css",
              "application/x-javascript",
              "text/javascript"
            ],
            "isCompressionEnabled": "True",
            "origins": [
              {
                "name": "origin1",
                "properties": {
                  "hostName": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-06-15' ).primaryEndpoints.blob,'https://',''),'/','')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "[parameters('RedisCacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-01",
      "dependsOn": [],
      "tags": {
        "displayName": "RedisCache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('RedisCacheSKUName')]",
          "family": "[parameters('RedisCacheSKUFamily')]",
          "capacity": "[parameters('RedisCacheSKUCapacity')]"
        },
        "redisVersion": "[parameters('RedisCacheRedisVersion')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForVolumeEncryption": "[parameters('enableVaultForVolumeEncryption')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('vaultSku')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "type": "secrets",
          "name": "[parameters('secretName')]",
          "apiVersion": "2015-06-01",
          "tags": { "displayName": "secret" },
          "properties": {
            "value": "[parameters('secretValue')]"
          },
          "dependsOn": [
            "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "hostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.cdn/profiles/endpoints', variables('profileName'), variables('endpointName'))).hostName]"
    },
    "originHostHeader": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.cdn/profiles/endpoints', variables('profileName'), variables('endpointName'))).originHostHeader]"
    }
  },
  "parameters": {
    "RedisCacheName": {
      "type": "string",
      "minLength": 1
    },
    "RedisCacheSKUName": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "defaultValue": "Standard"
    },
    "RedisCacheSKUFamily": {
      "type": "string",
      "allowedValues": [
        "C"
      ],
      "defaultValue": "C"
    },
    "RedisCacheSKUCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 0
    },
    "RedisCacheRedisVersion": {
      "type": "string",
      "allowedValues": [
        "2.8"
      ],
      "defaultValue": "2.8"
    },

    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the vault"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant Id for the subscription and use assigned access to the vault. Available from the Get-AzureRMSubscription PowerShell cmdlet"
      }
    },
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AAD user or service principal that will have access to the vault. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [ "all" ],
      "metadata": {
        "description": "Permissions to grant user to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [ "all" ],
      "metadata": {
        "description": "Permissions to grant user to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for ARM template deployment"
      }
    },
    "enableVaultForVolumeEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for volume encryption"
      }
    },
    "secretName": {
      "type": "string",
      "metadata": {
        "description": "Name of the secret to store in the vault"
      }
    },
    "secretValue": {
      "type": "securestring",
      "metadata": {
        "description": "Value of the secret to store in the vault"
      }
    }
  }
}
